{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"What is the Microcomputer Museum?","text":"<p>The microcomputer museum will pair original, physical hardware with interactive displays running best-in-class recreations running on FPGAs (and occasionally emulators) with the goal of mimicing original hardware as accurately as possible.</p>"},{"location":"#project-goal","title":"Project Goal","text":"<p>The goal of this project is to replicate the functionality of Nintendo's Famicom/NES system on an FPGA using solely open source tools and methods. Our secondary goal is to then create a system that educates the user on how computers or more specifically the Famicom/NES system works.</p>"},{"location":"NES/","title":"A breakdown of how the NES/Famicom hardware works","text":"<p>The Family Computer (Famicom) was released in 1983 in Japan and later internationally as the Nintendo Entertainment System (NES) in 1985.</p> Family Computer (\"Famicom\") main unit (with hardwired controllers) NES Control Deck (with detachable controllers)"},{"location":"NES/#the-cpu","title":"The CPU","text":"<p>The CPU was either the Ricoh 2A03 for the NTSC version or the Ricoh 2A07 for the PAL version. These CPUs were an unlicensed derivative of the MOS Technology 6502 core.</p> <p>Specs:</p> <ul> <li>Based on: MOS Technology 6502</li> <li>Clock Speed:<ul> <li>NTSC: ~1.79 MHz</li> <li>PAL: ~1.66 MHz</li> </ul> </li> <li>Architecture: 8-bit</li> <li>Registers:<ul> <li>A (Accumulator)</li> <li>X, Y (Index registers)</li> <li>Stack Pointer (SP)</li> <li>Program Counter (PC)</li> <li>Status Flags</li> </ul> </li> </ul>"},{"location":"NES/#built-in-audio-channels","title":"Built-in Audio Channels","text":"<ul> <li>5 channels:<ul> <li>2 Pulse wave generators</li> <li>1 Triangle wave</li> <li>1 Noise generator</li> <li>1 DPCM (Delta Pulse Code Modulation) channel</li> </ul> </li> </ul>"},{"location":"NES/#ppu-picture-processing-unit-ricoh-rp2c02","title":"PPU (Picture Processing Unit): Ricoh RP2C02","text":"<ul> <li>Resolution: 256 \u00d7 240 pixels</li> <li>Colors: 54-color palette (simultaneous display of 25 colors)</li> <li>Video RAM (VRAM): 2 KB</li> <li>Sprites: Supports up to 64 sprites (8x8 or 8x16)</li> </ul>"},{"location":"NES/#memory","title":"Memory","text":""},{"location":"NES/#internal-ram","title":"Internal RAM","text":"<ul> <li>Size: 2 KB (WRAM)</li> <li>Used for temporary variables, stack, and general program data</li> </ul>"},{"location":"NES/#cartridge-ram-prg-ram","title":"Cartridge RAM (PRG RAM)","text":"<ul> <li>Varies per cartridge (e.g., 8 KB to 32 KB)</li> <li>May include battery backup for saves</li> </ul>"},{"location":"NES/#controller-input","title":"Controller Input","text":"<ul> <li>Ports: 2 controller ports</li> <li>Standard Controller:<ul> <li>D-Pad</li> <li>A, B buttons</li> <li>Select</li> <li>Start</li> </ul> </li> </ul> <p>Controllers used a serial shift register to send data to the console.</p>"},{"location":"NES/#references","title":"References","text":"<ul> <li>Nesdev Wiki</li> <li>Visual 6502</li> <li>NES Architecture</li> </ul>"},{"location":"hardware/","title":"Hardware Required","text":""},{"location":"hardware/#semester-1","title":"Semester 1","text":"<p>As of semester 1 we are using the DE-10 Lite as our FPGA of choice. This will allow us to test a primitive barebones implementation of an NES. </p> <p>Our biggest drawback in using this FPGA is that it requires Quartus Prime in order to generate the proprietary bitstream format (.sof and .pof), Intel-specific place and route tools, and the Intel USB Blaster programmer, which only Quartus supports reliably. This is an issue since the goal of our project is to be entirely open source.</p> <p>The following table shows a comparison between what the MiSTer project uses (DE10-Nano) and a cheaper FPGA we have on hand (DE10-Lite).</p>"},{"location":"hardware/#de10-lite-vs-de10-nano-comparison-table","title":"DE10-Lite vs DE10-Nano Comparison Table","text":"Feature DE10-Lite DE10-Nano FPGA Chip Intel MAX 10 (10M50DAF484C7G) Intel Cyclone V SoC (5CSEBA6U23I7) Logic Elements (LEs) ~50K ~110K Onboard RAM 378 KB (M9K blocks) 1 GB DDR3 (for ARM), 64 MB SDRAM (FPGA) Processor None Dual-core ARM Cortex-A9 ADC / Analog Yes (ADC + temp sensor) No I/O Headers 40 GPIO pins 40 GPIO + Arduino Header Storage None microSD slot Video Output VGA (with DAC R-2R circuit) HDMI USB Support USB-Blaster (via mini-USB) USB OTG, USB Blaster (via micro-USB) Networking No Gigabit Ethernet Power Source USB only USB or 5V barrel jack Cost (Approx.) ~$70 ~$130"},{"location":"install/","title":"Installation","text":"<pre><code>git clone https://github.com/UF-Microcomputer-Museum/Hardware\ncd Hardware\n</code></pre>"}]}